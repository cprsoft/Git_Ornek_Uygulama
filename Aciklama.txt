1. Hotfix'i Temizle
bash
git checkout main
git rebase -i HEAD~5
# Rebase editöründe:
# - E commitinin başındaki 'pick' yerine 'edit' yaz
# - Diğer commitleri olduğu gibi bırak (A,B,C,D pick kalacak)
# Edit modunda:
git restore HEAD^ -- config.json
git add config.json
git commit --amend -m "fix: restore config.json"
git rebase --continue

2. Feature Branch'ini Main'e Hazırla
bash
git checkout feature
git rebase -i HEAD~3
# Rebase editöründe:
# - F1'i 'pick' bırak
# - F2 ve F3 için 'squash' yaz
# - Yeni commit mesajı: "feat: implement new feature"
git rebase main

3. Ana Dalda Birleştir (FF-only)
bash
git checkout main
git merge --ff-only feature

4. Sürüm Etiketi Ekle
bash
git tag -a v1.1.0 -m "Version 1.1.0 with new feature implementation"
git push origin v1.1.0

5. Yanlış Commit'i Düzelt
bash
git checkout <C_commit_hash> -b fix-typo  # git log ile C'nin hash'ini bul
# Gerekli düzeltmeleri yap (örneğin dosyayı düzenle)
git add .
git commit -m "chore: fix typo in C"
git checkout main
git merge fix-typo
GitHub'a Gönderme
bash
git push origin main
git push origin feature
git push --tags
Kontroller
bash
git log --oneline --graph --all
# Beklenen çıktı:
# *   (main) chore: fix typo in C
# *   feat: implement new feature
# |\  
# | * (feature) feat: implement new feature
# * | fix: restore config.json
# * | E
# |/  
# * D
# * C
# * B
# * A